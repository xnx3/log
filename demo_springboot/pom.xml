<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.zvo.log</groupId>
	<artifactId>log-demo-springboot</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- 编译时的编码 -->
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<!-- Spring Boot 启动父依赖 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.1</version>
    </parent>

	<dependencies> 
		<!-- Spring Boot web依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
	
		<!-- 文件上传相关的核心支持，是必须有的 -->
		<dependency> 
			<groupId>cn.zvo.log</groupId>
			<artifactId>log-core</artifactId>
			<version>1.0</version>
		</dependency>
		<!-- 在 SpringBoot 框架中的快速使用。 （在不同的框架中使用，这里引入的framework.xxx也不同） -->
		<dependency> 
			<groupId>cn.zvo.log</groupId>
			<artifactId>log-framework-springboot</artifactId>
			<version>1.0</version>
		</dependency> 
		<!-- 加入 elasticsearch 存储的实现。 （存储到哪，这里artifactId就引入的哪里的 datasource.xxx 如果单纯存储到本地，这里直接就不用在引入这个 datasource.xxx 了，core中默认带了本地文件存储 FileDatasource 的实现） -->
		<dependency> 
		    <groupId>cn.zvo.log</groupId>
		    <artifactId>log-datasource-elasticsearch</artifactId>
		    <version>1.0</version>
		</dependency>
		
		
	</dependencies>
</project>